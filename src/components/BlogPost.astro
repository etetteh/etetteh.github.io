---
// BlogPage.astro
import { getCollection } from "astro:content";
import BlogPostCard from '../components/BlogCard.astro';
import type { ImageMetadata } from 'astro';

// Define the type for your blog post frontmatter
interface Frontmatter {
  postDate: string;
  imageURL: string;
  postTitle: string;
  postExcerpt: string;
  postURL: string;
  imageAlt?: string;
  categoryName: string;
  authorName: string;
  tags?: string[];
  shadowColor?: string;
}

// Define the type for your blog post
interface BlogPost {
  data: Frontmatter;
}

// Load all blog posts using import.meta.glob
const blogPosts = await getCollection("blog");
// Load all images using import.meta.glob
const images = import.meta.glob<{ default: ImageMetadata }>('../assets/blog/*.{jpeg,jpg,png,gif,webp}', { eager: true });

// Process and sort posts
const allPosts = Object.values(blogPosts)
  .filter(post => post.data.postDate && !isNaN(new Date(post.data.postDate).getTime()))
  .sort((a, b) => new Date(b.data.postDate).getTime() - new Date(a.data.postDate).getTime())
  .map(post => {
    const imageName = post.data.imageURL.split('/').pop();
    const imageImport = imageName ? images[`../assets/blog/${imageName}`] : undefined;
    return {
      ...post,
      imageURL: imageImport ? imageImport.default : undefined
    };
  });

const categories = ['All Categories', 'Agriculture', 'Insurance', 'Finance', 'Healthcare'];

---
<style>
  /* Responsive category button styling */
  .category-btn {
    font-size: 0.875rem; /* Adjust text size */
    font-weight: 500;
  }

  /* Individual post card hover */
  .post-card:hover {
    transform: scale(1.03);
    transition: transform 0.3s ease-in-out;
  }
</style>

<header class="text-center py-10 rounded-lg mb-6">
  <h1 class="text-4xl font-bold tracking-wide">
    Explore <span class="bg-clip-text text-transparent bg-gradient-to-r from-green-400 to-blue-500">Insights</span> & 
    <span class="bg-clip-text text-transparent bg-gradient-to-r from-purple-500 to-pink-500">Innovations</span>
  </h1>
  <p class="mt-4 text-lg max-w-2xl mx-auto px-4">
    Delve into the latest <span class="bg-clip-text text-transparent bg-gradient-to-r from-green-400 to-blue-500">trends</span>, 
    <span class="bg-clip-text text-transparent bg-gradient-to-r from-purple-500 to-pink-500">deep dives</span>, and 
    <span class="bg-clip-text text-transparent bg-gradient-to-r from-yellow-500 to-orange-500">expert insights</span> across 
    <span class="bg-clip-text text-transparent bg-gradient-to-r from-green-400 to-blue-500">Agriculture</span>, 
    <span class="bg-clip-text text-transparent bg-gradient-to-r from-yellow-400 to-orange-500">Finance</span>, 
    <span class="bg-clip-text text-transparent bg-gradient-to-r from-red-400 to-purple-500">Healthcare</span>, and 
    <span class="bg-clip-text text-transparent bg-gradient-to-r from-indigo-400 to-purple-500">Insurance</span> â€“ all curated to inspire and inform.
  </p>
</header>

<section class="mx-9 mb-1 p-6 rounded-lg">
  <div class="overflow-x-auto whitespace-nowrap flex justify-center space-x-2 mb-6">
    {categories.map(category => (
      <button
        class="category-btn px-4 py-2 rounded-full transition duration-200 ease-in-out border shadow-sm"
        data-category={category}
      >
        {category}
      </button>
    ))}
  </div>

  <div id="postsContainer" class="shadow-2xl">
    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-2">
      {allPosts.map((post) => (
        <div class="post-card inline-block min-w-[250px] ease-in-out duration-300" data-category={post.data.categoryName}> 
          <BlogPostCard
            postTitle={post.data.postTitle}
            postExcerpt={post.data.postExcerpt}
            postURL={post.data.postURL}
            imageURL={post.imageURL}
            imageAlt={post.data.imageAlt || 'Blog Post Image'}
            postDate={post.data.postDate}
            categoryName={post.data.categoryName}
            authorName={post.data.authorName}
            tags={post.data.tags}
            shadowColor={post.data.shadowColor}
            showTags={false}
            showExcerpt={false}
            aspect="video"
          />
        </div>
      ))}
    </div>
  </div>
</section>

<script>
  function filterPosts(category: string) {
    const posts = document.querySelectorAll('.post-card');
    let visibleCount = 0;

    posts.forEach(post => {
      if (category === 'All Categories' || (post as HTMLElement).dataset.category === category) {
        (post as HTMLElement).style.display = '';
        visibleCount++;
      } else {
        (post as HTMLElement).style.display = 'none';
      }
    });

    const noPostsMessage = document.getElementById('noPostsMessage');
    if (visibleCount === 0) {
      if (!noPostsMessage) {
        const message = document.createElement('p');
        const postsContainer = document.getElementById('postsContainer');
        message.id = 'noPostsMessage';
        message.textContent = 'No related posts found in this category.';
        if (postsContainer) {
          postsContainer.appendChild(message);
        }
      }
    } else if (noPostsMessage) {
      noPostsMessage.remove();
    }
  }

  document.addEventListener('DOMContentLoaded', () => {
    const buttons = document.querySelectorAll('.category-btn');
    
    buttons.forEach(button => {
      button.addEventListener('click', () => {
        buttons.forEach(btn => btn.classList.remove('text-[#20808D]', 'shadow-md'));
        button.classList.add('text-[#20808D]', 'shadow-md');
        filterPosts((button as HTMLElement).dataset.category || 'All Categories');
      });
    });

    // Set initial active state for 'All Categories'
    (buttons[0] as HTMLElement).click();
  });
</script>
