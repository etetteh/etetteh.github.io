---
import ExploreMore from "./ExploreMore.astro";
import NoImageCardSkew from "./NoImageCardSkew.astro";
import CardSkew from "./CardSkew1.astro";
import Layout from "../layouts/Layout.astro";

import type { ImageMetadata } from 'astro';

interface ResearchHighlight {
 title: string;
 description: string;
 imageUrl: string;
 imageAlt: string;
 shadowColor: string;
 contentLink: string;
}

interface ProjectChild {
 name: string;
 postTitle: string;
 description: string;
 icon: string;
 imageURL: string;
 postURL: string;
 shadowColor: string;
 ballColor: string;
 industry: string;
}

interface IndustryData {
 name: string;
 postTitle: string;
 heroTitle: string;
 heroSubtitle: string;
 description: string;
 imageURL: string;
 postURL: string;
 shadowColor: string;
 ballColor: string;
 industry: string;
 children: ProjectChild[];
}

interface Props {
  industryData: IndustryData;
  researchHighlights: ResearchHighlight[];
  gradientStart: string;
  gradientMiddle: string;
  gradientEnd: string;
}

const { industryData, researchHighlights, gradientStart, gradientMiddle, gradientEnd } = Astro.props;
 
// const images = import.meta.glob<{ default: ImageMetadata }>('/src/assets/**/*.{jpeg,jpg,png,gif}');
---

<Layout title={industryData.postTitle}>
  <section class="relative text-gray-900 min-h-screen flex items-center justify-center overflow-hidden bg-white">
    <div class="container mx-auto px-6 relative z-10">
      <div class="flex flex-col items-center justify-center text-center">
        <h1 class="text-5xl md:text-7xl font-extrabold mb-6 leading-tight max-w-4xl">
            <span class={`block text-transparent bg-clip-text bg-gradient-to-r from-${gradientStart} via-${gradientMiddle} to-${gradientEnd}`}>
                {industryData.heroTitle}
            </span>
        </h1>
        <p class="text-xl md:text-2xl mb-10 text-gray-700 max-w-2xl leading-relaxed">
          {industryData.heroSubtitle}
        </p>
        <div class="flex flex-col mt-7 sm:flex-row justify-center space-y-4 sm:space-y-0 sm:space-x-4 mb-16">
          <ExploreMore
            contentLink="#features"
            text="Explore All Our Solutions"
            class="inline-flex items-center px-8 py-4 text-lg font-semibold rounded-full transition duration-300 ease-in-out transform hover:scale-105 shadow-lg"
          />
        </div>
      </div>
    </div>
  </section>

  <section id="features" class="overflow-hidden py-12 sm:py-16 md:py-20 mb-8 sm:mb-12 md:mb-16">
    <div class="container mx-auto">
      <h2 class="text-3xl sm:text-4xl md:text-5xl mb-8 sm:mb-12 md:mb-16 text-center text-gray-900 dark:text-white">
        {industryData.postTitle.split('|')[0].trim()}
      </h2>
      <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8 mx-6 xl:mx-10 2xl:mx-28">
        {industryData.children.map((feature) => (
          <div class="relative">
            <NoImageCardSkew
              shadowColor={feature.shadowColor}
              contentLink={feature.postURL}
              readMoreText="Learn More"
            >
              <div class="bg-gray-0 transition duration-300 h-full flex flex-col min-h-[120px]">
                <div class="flex items-center mb-3 sm:mb-4">
                  <i class={`fas ${feature.icon} text-2xl sm:text-3xl text-blue-500 mr-3`} />
                  <h4 class="text-lg sm:text-xl md:text-2xl font-bold text-gray-900 dark:text-white">
                    {feature.name}
                  </h4>
                </div>
                <p class="text-sm sm:text-base md:text-lg text-gray-600 dark:text-gray-400 mb-2">
                  {feature.postTitle}
                </p>
                <p class="text-sm sm:text-base md:text-lg mb-4 sm:mb-6 text-gray-700 dark:text-gray-300">
                  {feature.description}
                </p>
              </div>
            </NoImageCardSkew>
          </div>
        ))}
      </div>
    </div>
  </section>

  <section class="mb-10 sm:pb-16 md:pb-20 lg:pb-20 xl:pb-40">
    <div class="container mx-auto">
      <h2 class="text-3xl sm:text-4xl md:text-5xl mb-8 sm:mb-12 md:mb-16 text-center text-gray-900 dark:text-white">
        Real-World Impact
      </h2>
      <div class="xl:container mt-4 sm:mt-5">
        <div class="grid grid-cols-1 sm:grid-cols-2 gap-8 mx-6 xl:mx-10 2xl:mx-28">
          {researchHighlights.map((highlight, index) => (
            <div class={`relative ${index % 2 === 1 ? "sm:top-16 xl:top-36" : ""}`}>
              <a href={highlight.contentLink} class="block">
                <CardSkew
                  imageUrl={highlight.imageUrl}
                  imageAlt={highlight.imageAlt}
                  shadowColor={highlight.shadowColor}
                  cardHeight={{
                    default: "400px",
                    sm: "450px",
                    md: "540px",
                    lg: "700px",
                    xl: "800px",
                  }}
                >
                  <div class="relative flex-col p-4 sm:p-6">
                    <h3 class="text-xl sm:text-2xl md:text-3xl font-bold text-white mb-2 sm:mb-3">
                      {highlight.title}
                    </h3>
                    <p class="text-xs sm:text-sm md:text-base text-gray-300 line-clamp-3 sm:line-clamp-4 md:line-clamp-5">
                      {highlight.description}
                    </p>
                  </div>
                </CardSkew>
              </a>
            </div>
          ))}
        </div>
      </div>
    </div>
  </section>
</Layout>

<style is:global>
  body {
    margin: 0;
    padding: 0;
    overflow-x: hidden;
    font-family: "Segoe UI", Tahoma, Geneva, Verdana, sans-serif;
  }

  .feature-card::before {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    border-radius: 0.5rem;
    padding: 2px;
    background: linear-gradient(45deg, #3b82f6, #10b981, #6366f1);
    -webkit-mask: linear-gradient(#fff 0 0) content-box, linear-gradient(#fff 0 0);
    -webkit-mask-composite: xor;
    mask-composite: exclude;
    opacity: 0;
    transition: opacity 0.3s ease;
  }

  .feature-card:hover::before {
    opacity: 1;
  }

  @keyframes float {
    0%, 100% { transform: translateY(0); }
    50% { transform: translateY(-10px); }
  }

  .group:hover {
    animation: float 3s ease-in-out infinite;
  }

  .animate-float {
    animation: float 3s ease-in-out infinite;
  }
</style>