---
import Layout from "../../layouts/Layout.astro";
import { getCollection } from "astro:content";

const blogPosts = await getCollection("blog");
const tags = blogPosts.reduce((acc, post) => {
  post.data.tags?.forEach(tag => {
    acc[tag] = (acc[tag] || 0) + 1;
  });
  return acc;
}, {} as Record<string, number>);

const sortedTags = Object.entries(tags)
  .sort(([a], [b]) => a.localeCompare(b))
  .map(([name, count]) => ({
    name,
    count,
    slug: name.toLowerCase().replace(/\s+/g, '-'),
  }));

const metadata = {
  title: "All Tags",
  description: "Browse all blog tags and discover content by specific topics",
};
---

<Layout title={metadata.title} description={metadata.description}>
  <section class="container mx-auto px-4 py-10">
    <h1 class="text-3xl sm:text-4xl lg:text-5xl font-bold mb-8 animate-fade-in">
      Browse by Tag
    </h1>

    <div class="flex flex-wrap gap-4">
      {sortedTags.map(({ name, count, slug }) => (
        <a
          href={`/tags/${slug}`}
          class="relative inline-flex items-center gap-2 px-5 py-2.5 text-sm font-medium text-center rounded-lg 
          bg-gradient-to-b from-teal-300 to-teal-500 dark:from-teal-400 dark:to-teal-600
          text-white dark:text-white
          hover:from-teal-400 hover:to-teal-600 dark:hover:from-teal-500 dark:hover:to-teal-700
          focus:ring-4 focus:outline-none focus:ring-teal-300 dark:focus:ring-teal-800
          shadow-lg shadow-teal-500/30 dark:shadow-teal-800/30
          transform hover:-translate-y-0.5 active:translate-y-0
          transition-all duration-150 ease-in-out
          hover:shadow-xl hover:shadow-teal-500/40 dark:hover:shadow-teal-800/40
          before:absolute before:inset-0 before:bg-white/20 dark:before:bg-black/20 before:rounded-lg before:opacity-0 hover:before:opacity-100 before:transition-opacity"
        >
          <span class="relative">
            #{name}
            <span class="ml-2 bg-white/20 dark:bg-black/20 px-2 py-0.5 rounded-full text-xs">
              {count}
            </span>
          </span>
        </a>
      ))}
    </div>
  </section>
</Layout>

<style>
  .animate-fade-in {
    animation: fadeIn 1s ease forwards;
    opacity: 0;
  }

  @keyframes fadeIn {
    to { opacity: 1; }
  }
</style>
