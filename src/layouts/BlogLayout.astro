---
// BlogLayout.astro
import BlogMainLayout from "./Layout.astro";
import RelatedPosts from "../components/RelatedPosts.astro";
import ShareDropdown from "../components/ShareDropdown.astro";
import Tooltip from "../components/Tooltip.astro";
import { Picture } from "astro:assets";
import { slugify } from "../utils/utils.js";

const { frontmatter } = Astro.props;
const { postTitle, postExcerpt, postURL, imageURL, imageAlt, postDate, categoryName, authorName } = frontmatter;

const categoryUrl = `/category/${slugify(categoryName)}`;
const authorUrl = `/author/${slugify(authorName)}`;
---

<BlogMainLayout title={postTitle} description={postExcerpt}>
    <!-- Blog Post Header -->
    <header>
        <article class="flex flex-col items-center text-center w-full mx-auto">
            <div class="container mx-auto max-w-4xl">
                <!-- Category Badge -->
                <div class="mt-3">
                    <a href={categoryUrl} 
                       class="inline-block px-3 py-1 mt-7 text-xs font-semibold text-white bg-blue-500 rounded-full hover:bg-blue-600 focus:outline-none focus:ring-2 focus:ring-blue-300">
                        {categoryName}
                    </a>
                </div>

                <!-- Blog Title -->
                <h1 class="text-3xl sm:text-4xl lg:text-5xl font-bold text-gray-800 leading-tight mt-4 mb-6">
                    {postTitle}
                </h1>
                
                <!-- Post Meta Info -->
                <div class="flex justify-between items-center mx-7">
                    <div class="flex flex-col items-start">
                        <!-- Post Date -->
                        <p class="text-gray-600 text-sm">{new Date(postDate).toLocaleDateString('en-US', { timeZone: "UTC", year: 'numeric', month: 'long', day: 'numeric' })}</p>

                        <!-- Author Link with Tooltip -->
                        <a href={authorUrl} 
                           class="mt-1 text-sm text-gray-800 hover:text-blue-600 hover:underline flex items-center space-x-2 group transition-colors duration-300">
                            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-gray-500 group-hover:text-blue-500 transition duration-300" viewBox="0 0 20 20" fill="currentColor">
                                <path fill-rule="evenodd" d="M10 2a4 4 0 100 8 4 4 0 000-8zM2 14a8 8 0 0116 0H2z" clip-rule="evenodd" />
                            </svg>
                            <span>{authorName}</span>
                        </a>
                        <Tooltip text={`View more posts by ${authorName}`} />
                    </div>

                    <!-- Share Dropdown Component -->
                    <ShareDropdown postURL={postURL} />
                </div>
            </div>

            <!-- Blog Image Section -->
            <div class="w-full px-4 lg:px-16 xl:px-32 mx-auto mt-6">
                <figure class="relative overflow-hidden">
                    <div class="relative w-full pt-[30.0%]">
                        <div class="absolute inset-0 w-full h-full">
                            <Picture
                                formats={['avif', 'webp']}
                                src={imageURL}
                                widths={[
                                375, 430, 437, 460, 820, 834, 1024, 1130, 1280, 1366, 1440, 1680, 1920, 2560
                                ]}
                                sizes={`
                                (max-width: 375px) 375px,   /* iPhone 15, iPhone 14, iPhone 15 Pro */
                                (max-width: 430px) 430px,   /* iPhone 15 Pro Max, Samsung Galaxy A15 4G/5G */
                                (max-width: 437px) 437px,   /* Samsung Galaxy A55 5G, Xiaomi Redmi 13C 4G */
                                (max-width: 460px) 460px,   /* Samsung Galaxy S24 Ultra */
                                (max-width: 820px) 820px,   /* Apple iPad, iPad Air */
                                (max-width: 834px) 834px,   /* iPad Pro 11" */
                                (max-width: 1024px) 1024px, /* Apple iPad Pro 12.9", Google Pixel Tablet */
                                (max-width: 1130px) 1130px, /* Microsoft Surface Pro 9, Lenovo tablets */
                                (max-width: 1280px) 1280px, /* MacBook Air M3, Samsung Galaxy Tab A9+ */
                                (max-width: 1366px) 1366px, /* Dell XPS 13, Samsung Galaxy Tab S9 series */
                                (max-width: 1440px) 1440px, /* iMac 24", HP Pavilion Plus 14 */
                                (max-width: 1680px) 1680px, /* Alienware Aurora R16, NZXT Player: One */
                                (max-width: 1920px) 1920px, /* HP Envy 34, Mac Mini (M2 Pro), Corsair One i500 */
                                (max-width: 2560px) 2560px, /* Mac Studio, 32-inch 4K displays */
                                (max-width: 3840px) 3840px, /* 32-inch 4K display */
                                auto         /* Default for larger */
                                `}
                                width={1600}
                                height={600}
                                alt={imageAlt}
                                decoding="async"
                                loading="lazy"
                                fit="auto"
                                class="hero-image"
                                layout="responsive"
                            />
                        </div>
                    </div>
                </figure>
            </div>
        </article>
    </header>

    <!-- Blog Content -->
    <main class="prose prose-lg max-w-none px-4 lg:px-16 xl:px-32 mx-auto mt-8 text-gray-800">
        <slot />

        <RelatedPosts currentCategory={categoryName} currentPostTitle={postTitle} />
    </main>
</BlogMainLayout>

<script>
    document.addEventListener("DOMContentLoaded", () => {
        // Share Dropdown Toggle
        const shareButton = document.getElementById("shareButton");
        const shareDropdown = document.getElementById("shareDropdown");

        if (shareButton && shareDropdown) {
            shareButton.addEventListener("click", () => {
                shareDropdown.classList.toggle("hidden");
            });

            // Close dropdown when clicking outside
            document.addEventListener("click", (event: MouseEvent) => {
                const target = event.target as Node;
                if (!shareButton.contains(target) && !shareDropdown.contains(target)) {
                    shareDropdown.classList.add("hidden");
                }
            });
        }

        // Tooltip Visibility
        const tooltips = document.querySelectorAll("[role='tooltip']");

        tooltips.forEach((tooltip) => {
            const trigger = tooltip.previousElementSibling; // Assuming tooltip is after the trigger
            if (trigger) {
                trigger.addEventListener("mouseenter", () => {
                    tooltip.classList.remove("invisible", "opacity-0");
                    tooltip.classList.add("opacity-100");
                });

                trigger.addEventListener("mouseleave", () => {
                    tooltip.classList.add("invisible", "opacity-0");
                    tooltip.classList.remove("opacity-100");
                });
            }
        });
    });
</script>
